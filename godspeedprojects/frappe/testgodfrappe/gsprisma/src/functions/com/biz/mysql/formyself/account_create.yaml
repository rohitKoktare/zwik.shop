summary: Create tabAccount
tasks:
# Checking if customer id ini Customer Databse table or not
  - id: mysql_tabcustomer_one
    fn: com.gs.datastore
    args:
      datasource: mysql
      data:
        where:
          id: <% parseInt(inputs.body.customerId) %>
        select:
          status: true
      config:
        method: tabCustomer.findUnique
    # on_error:
    #   continue: false
    #   response: 
    #     success: false
    #     code: 417
    #     data: |
    #         <coffee% {
    #             exc_type: 'LinkValidationError  ',
    #             exception: ' Could not find Customer:  This is first error '+  inputs.body.customerId
    #                       } %>
  
  - id: check_customer_id
    fn: com.gs.if
    condition: <% outputs.mysql_tabcustomer_one.data != null  %>
    tasks:
      - id: check_status_of_customer
        fn: com.gs.if
        condition: <% outputs.mysql_tabcustomer_one.data.status == "Active"  %>
        tasks:
          - id: cheaking_account_data
            fn: com.gs.datastore
            args:
              datasource: mysql
              data:
                where:
                  account_type: <% inputs.body.account_type %>
                  account_number: <% inputs.body.account_number %>
              config:
                method: tabAccount.findMany
            # on_error:
            #   continue: false
            #   response:
            #     success: false
            #     code: 417
            #     data: |
            #        <coffee% {
            #                 exc_type: 'ValidationError',
            #                 exception: ' Customer with bochaa' + inputs.body.customerId + " is " + outputs.mysql_tabcustomer_one.data.status
            #               } %>   
          
          - id: accept_if_no_account_exists
            fn: com.gs.if
            condition:  <% outputs.cheaking_account_data.data.length == 0 %>
            tasks:
              - id: create_account
                fn: com.gs.datastore
                args: 
                  datasource: mysql
                  data:
                    data: <% inputs.body %>
                  config: 
                    method: tabAccount.create
                on_error: 

              - id: return_created_account
                fn: com.gs.return
                args:  |
                       <%  
                       data: {
                        tsp:  outputs.create_account.data.tsp,
                        customer: outputs.create_account.data.customerId,
                        business: outputs.create_account.data.business,
                        account_type: outputs.create_account.data.account_type,
                        account_number: outputs.create_account.data.account_number,
                        account_holder_name: outputs.create_account.data.account_holder_name,
                        expiry_date: outputs.create_account.data.expiry_date,
                        is_foreign_transactions_allowed: outputs.create_account.data.is_foreign_transactions_allowed,
                        enabled: outputs.create_account.data.enabled,
                        id: outputs.create_account.data.id
                       }  %>

          - id: do_not_accept
            fn: com.gs.else
            tasks:
              - id: return_if_data_exists
                fn: com.gs.return
                on_error:
                  continue: false
                  response:
                    success: false
                    code: 417
                    data: |
                        <coffee%  {
                            exc_type: 'ValidationError',
                            exception: ' Account Number ' + inputs.body.account_number + ' with the same Account Type ' + inputs.body.account_type + ' already exists'
                             } %>
      - id: status_is_inactive
        fn: com.gs.else
        tasks:
          - id: reject_if_inactive
            fn: com.gs.return
            on_error:
              continue: false
              response:
                success: false
                code: 417
                data: |
                  <coffee% {
                      exc_type: 'LinkValidationError',
                      exception: ' Customer Status is: This is second ' + outputs.mysql_tabcustomer_one.data.status
                            } %>
  - id: customer_id_not_found
    fn: com.gs.else
    tasks:
      - id: return_the_error
        fn: com.gs.return
        on_error:
          continue: false
          response: 
            success: false
            code: 417
            data: |
              <coffee% {
                  exc_type: 'LinkValidationError',
                  exception: ' Could not find Customer: '+  inputs.body.customerId
                            } %>
 
  - id: trial_output
    fn: com.gs.return
    args: <%  outputs.mysql_tabcustomer_one.data %>





#############################
          # - id: accept_if_no_account_exists
          #   fn: com.gs.if
          #   condition:  <% outputs.cheaking_account_data.data.length == 0 %>
          #   tasks:
          #     - id: create_account
          #       fn: com.gs.datastore
          #       args: 
          #         datasource: mysql
          #         data:
          #           data:
          #             select:
          #               tsp: true
          #               customerId: true
          #         config: 
          #           method: tabAccount.create